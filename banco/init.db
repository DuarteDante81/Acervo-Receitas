-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

CREATE SCHEMA IF NOT EXISTS `cozinha_criativa` ;
USE `cozinha_criativa` ;


CREATE TABLE IF NOT EXISTS `cozinha_criativa`.`cargo` (
  `id_cargo` SMALLINT NOT NULL COMMENT 'Contém o identificador do cargo.\n\nExemplo:\n\nidCargo      Descrição\n01               Cozinheiro\n02               Degustador\n03               Editor\n04               Administrador\n05               Analista de Sistemas\n...',
  `descricao` VARCHAR(45) NOT NULL COMMENT 'Contém a descricao do cargo.\n\nExemplo:\n\nidCargo      Descrição\n01               Cozinheiro\n02               Degustador\n03               Editor\n04               Administrador\n05               Analista de Sistemas\n...',
  PRIMARY KEY (`id_cargo`))
ENGINE = InnoDB;

CREATE TABLE IF NOT EXISTS `cozinha_criativa`.`usuario` (
  `id_usuario` BIGINT NOT NULL AUTO_INCREMENT COMMENT 'Contém o identificador do cargo.\n\nExemplo:\n\nidCargo      Descrição\n01               Cozinheiro\n02               Degustador\n03               Editor\n04               Administrador\n05               Analista de Sistemas\n...',
  `nome` VARCHAR(250) NOT NULL,
  `email` varchar(250) not null,
  `senha` varchar(65) not null,
  PRIMARY KEY (`id_usuario`))
ENGINE = InnoDB;


CREATE TABLE IF NOT EXISTS `cozinha_criativa`.`funcionario` (
  `id_funcionario` BIGINT NOT NULL AUTO_INCREMENT COMMENT 'Contém o identificador único do funcionário. Exemplo: 00001, 00002...',
  `rg` VARCHAR(13) NOT NULL COMMENT 'Contém o Registro Geral de identificação do funcionário (número da identidade)',
  `nome` VARCHAR(100) NOT NULL COMMENT 'Contém o nome do funcionário. Exemplo: Ana Maria Braga, Cleiton Bom de Guerra',
  `salario` DECIMAL(9,2) NOT NULL COMMENT 'Contém o salário contratado junto ao funcionário. Exemplo: 2.500,00, 5.000,00...',
  `data_adm` DATE NOT NULL COMMENT 'Contém a data de ingresso do funcionário. Exemplo: 26/05/2000, 14/03/2019...',
  `data_egresso` DATE NULL,
  `fk_cargo` SMALLINT NOT NULL,
  `fk_usuario` BIGINT NOT NULL,
  `nome_fantasia` VARCHAR(45) NULL COMMENT 'Contém nome fantasia do cozinheiro.',
  PRIMARY KEY (`id_funcionario`),
  FOREIGN KEY (`fk_cargo`) REFERENCES `cozinha_criativa`.`cargo`(`id_cargo`) ON DELETE CASCADE ON UPDATE CASCADE,
  FOREIGN KEY (`fk_usuario`) REFERENCES `cozinha_criativa`.`usuario`(`id_usuario`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE = InnoDB;


CREATE TABLE IF NOT EXISTS `cozinha_criativa`.`categoria` (
  `id_categoria` SMALLINT NOT NULL COMMENT 'Contém o identificador da categoria.\n\nExemplo:\n\nCategoria  Descricao\n0001          Carne\n0002          Aves\n0003          Massas',
  `descricao` VARCHAR(45) NOT NULL COMMENT 'Contém a descricao da categoria.\n\nExemplo:\n\nCategoria  Descricao\n0001          Carne\n0002          Aves\n0003          Massas',
  PRIMARY KEY (`id_categoria`))
ENGINE = InnoDB;


CREATE TABLE IF NOT EXISTS `cozinha_criativa`.`receita` (
  `nome` VARCHAR(50) NOT NULL COMMENT 'Contém o nome da receita\n\nExemplo:\n\nFeijoada',
  `fk_cozinheiro` BIGINT NOT NULL,
  `id_receita` BIGINT NOT NULL AUTO_INCREMENT,
  `data_inclusao` DATE NOT NULL,
  `fk_categoria` SMALLINT NOT NULL,
  `descricao` VARCHAR(5000) NOT NULL COMMENT 'Contém a descricao da receita.\n\n\nExemplo:\n\nUm bolo de morango marilhoso feito de uma morangueiro nos alpes suiços',
  `modo_preparo` VARCHAR(5000) NOT NULL COMMENT 'Contém o modo de preparo.\n\nExemplo:\n\n',
  `num_porcao` SMALLINT NOT NULL COMMENT 'Contém o número da porção da receita',
  `fk_degustador` BIGINT NULL COMMENT 'Contém o identificador do funcionário DEGUSTADOR que tem a missão de degustar as receitas produzidas.\n\nExemplo:\n\nDegustador 001\nDegustador 002\nDegustador 003',
  `data_degustacao` DATE NULL COMMENT 'Contém a data de degustação da receita\n\n\nExemplo:\n\n21/08/24',
  `nota` DECIMAL(3,1) NULL COMMENT 'Contém a nota atribuida pelo degustador da receita.\n\nExemplo:\n\nNota\n\n10,0\n6,5\n8,8',
  `ind_inedita` CHAR(1) NULL COMMENT 'Contém o indicador de receita inédita, ou seja, quando não foi publicada deverá estar com o valor \"S\"\n\nExemplo:\n\n\"S\"\n\"N\"',
  INDEX `fk_Receita_Funcionario1_idx` (`fk_cozinheiro` ASC) ,
  INDEX `fk_Receita_Categoria1_idx` (`fk_categoria` ASC) ,
  PRIMARY KEY (`id_receita`, `fk_cozinheiro`),
  UNIQUE INDEX `id_receita_UNIQUE` (`id_receita` ASC) ,
  INDEX `fk_Receita_Funcionario2_idx` (`Fk_degustador` ASC) ,
  CONSTRAINT `fk_Receita_Funcionario1`
    FOREIGN KEY (`fk_cozinheiro`)
    REFERENCES `cozinha_criativa`.`funcionario` (`id_funcionario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Receita_Categoria1`
    FOREIGN KEY (`fk_categoria`)
    REFERENCES `cozinha_criativa`.`categoria` (`id_categoria`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Receita_Funcionario2`
    FOREIGN KEY (`fk_degustador`)
    REFERENCES `cozinha_criativa`.`funcionario` (`id_funcionario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


CREATE TABLE IF NOT EXISTS `cozinha_criativa`.`ingrediente` (
  `id_ingrediente` INT NOT NULL COMMENT 'Contém o identificador do ingrediente.\n\nExemplo:\n\nidIngrediente        Nome\n  00001                 Açucar Refinado\n  00002                 Açucar Mascavo\n...\n\n                                      ',
  `nome` VARCHAR(45) NOT NULL COMMENT 'Contém o o nome do ingrediente.\n\nExemplo:\n\nidIngrediente        Nome\n  00001                 Açucar Refinado\n  00002                 Açucar Mascavo\n...\n',
  `descricao` VARCHAR(500) NULL COMMENT 'Contém a descrição detahada do ingrediente.\n\n\nDescrição:\n\nO molho Belacan é um sambal ao estilo malaio com camarão seco.',
  PRIMARY KEY (`id_ingrediente`))
ENGINE = InnoDB;


CREATE TABLE IF NOT EXISTS `cozinha_criativa`.`medida` (
  `id_medida` SMALLINT NOT NULL AUTO_INCREMENT COMMENT 'Contém o identificador da medida.\n\n\nExemplo:\n\nidMedida         Descricao \n \n0001               Copo americano\n0002               Colher de chá\n0003               ml',
  `descricao` VARCHAR(45) NOT NULL COMMENT 'Contém a descricao da medida.\n\n\nExemplo:\n\nidMedida         Descricao \n \n0001               Copo americano\n0002               Colher de chá\n0003               ml',
  PRIMARY KEY (`id_medida`))
ENGINE = InnoDB;


CREATE TABLE IF NOT EXISTS `cozinha_criativa`.`receita_ingrediente` (
  `FK_id_rec` BIGINT NOT NULL COMMENT 'Contém o nome da receita\n\nExemplo:\n\nFeijoada',
  `FKcozinheiro` BIGINT NOT NULL COMMENT 'Contém o nome do funcionário\n\nExemplo:\n\nNome:\nAna Maria Braga,\nCleiton Bom de Guerra',
  `FKIngrediente` INT NOT NULL COMMENT 'Contém o o nome do ingrediente.\n\nExemplo:\n\nidIngrediente        Nome\n  00001                 Açucar Refinado\n  00002                 Açucar Mascavo\n...\n',
  `FKMedida` SMALLINT NOT NULL COMMENT 'Contém a descricao da medida.\n\n\nExemplo:\n\nidMedida         Descricao \n \n0001               Copo americano\n0002               Colher de chá\n0003               ml',
  `quantidade` DECIMAL(7,2) NOT NULL COMMENT 'Contém a quantidade da medida do ingrediente na receita\n\nExemplo:\n\nQuantidade\n     1,0\n     2,5\n     ...',
  PRIMARY KEY (`FK_id_rec`, `FKcozinheiro`, `FKIngrediente`),
  INDEX `fk_Receita_has_Ingrediente_Ingrediente1_idx` (`FKIngrediente` ASC) ,
  INDEX `fk_Receita_has_Ingrediente_Receita1_idx` (`FK_id_rec` ASC, `FKcozinheiro` ASC) ,
  INDEX `fk_Receita_Ingrediente_Medida1_idx` (`FKMedida` ASC) ,
  CONSTRAINT `fk_Receita_has_Ingrediente_Receita1`
    FOREIGN KEY (`FK_id_rec` , `FKcozinheiro`)
    REFERENCES `cozinha_criativa`.`receita`(`id_receita` , `fk_cozinheiro`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Receita_has_Ingrediente_Ingrediente1`
    FOREIGN KEY (`FKIngrediente`)
    REFERENCES `cozinha_criativa`.`ingrediente` (`id_ingrediente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Receita_Ingrediente_Medida1`
    FOREIGN KEY (`FKMedida`)
    REFERENCES `cozinha_criativa`.`medida` (`id_medida`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


CREATE TABLE IF NOT EXISTS `cozinha_criativa`.`restaurante` (
  `id_restaurante` BIGINT NOT NULL AUTO_INCREMENT COMMENT 'Contém o identificador do restaurante',
  `nome` VARCHAR(45) NOT NULL COMMENT 'Contém o nome do restaurante\n',
  PRIMARY KEY (`id_restaurante`))
ENGINE = InnoDB;

CREATE TABLE IF NOT EXISTS `cozinha_criativa`.`metas` (
  `id_metas` BIGINT NOT NULL AUTO_INCREMENT,
  `ano_prod` SMALLINT NOT NULL COMMENT 'Contém o ano relativo a produção da receita.\n\n\nExemplo:\n\n2024\n2023\n2020',
  `mes_prod` SMALLINT NOT NULL COMMENT 'Contém o mês relativo a produção da receita.\n\n\nExemplo:\n\n01\n02\n03\n...\n12',
  `quant_receitas` VARCHAR(45) NOT NULL COMMENT 'Contém a quantidade de receitas a serem produzidas pelos cozinheiros mensalmente\n\n\nExemplo:\n\nQuantidade\n\n05\n03',
  `id_receita` BIGINT NOT NULL,
  `fk_cozinheiro` BIGINT NOT NULL,
  PRIMARY KEY (`id_metas`),
  CONSTRAINT `fk_Parametro_Receita1`
    FOREIGN KEY (`id_receita` , `fk_cozinheiro`)
    REFERENCES `cozinha_criativa`.`receita` (`id_receita` , `fk_cozinheiro`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


CREATE TABLE IF NOT EXISTS `cozinha_criativa`.`midia` (
  `id_midia` BIGINT NOT NULL COMMENT 'Contém um identificadaor do tipo de mídia utilizada.\n\nExemplo:\n\nid',
  `tipo` VARCHAR(15) NULL,
  `descricao` VARCHAR(45) NOT NULL,
  `midia` LONGBLOB NOT NULL,
  `fk_id_rec` BIGINT NOT NULL,
  FOREIGN KEY (`fk_id_rec`)
  REFERENCES `cozinha_criativa`.`receita` (`id_receita`),
  PRIMARY KEY (`id_midia`))
ENGINE = InnoDB;

CREATE TABLE IF NOT EXISTS `cozinha_criativa`.`livro` (
  `id_livro` BIGINT NOT NULL AUTO_INCREMENT,
  `titulo` VARCHAR(45) NOT NULL COMMENT 'Contém o título do livro.\n',
  `cod_isbn` VARCHAR(20) NULL COMMENT 'Contém o código internacionall ISBN do livro.\n\nExemplo:\n\nCod ISBN\n978-65-899999-01-3',
  `fk_editor` BIGINT NOT NULL,
  PRIMARY KEY (`id_livro`),
  UNIQUE INDEX `titulo_UNIQUE` (`titulo` ASC) ,
  UNIQUE INDEX `cod_isbn_UNIQUE` (`cod_isbn` ASC) ,
  INDEX `fk_Livro_Funcionario1_idx` (`fk_editor` ASC) ,
  CONSTRAINT `fk_Livro_Funcionario1`
    FOREIGN KEY (`fk_editor`)
    REFERENCES `cozinha_criativa`.`funcionario` (`id_funcionario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


CREATE TABLE IF NOT EXISTS `cozinha_criativa`.`publicacao` (
  `fk_livro` BIGINT NOT NULL,
  `fk_id_rec` BIGINT NOT NULL,
  `fk_cozinheiro` BIGINT NOT NULL,
  PRIMARY KEY (`fk_livro`, `fk_id_rec`, `fk_cozinheiro`),
  INDEX `fk_Livro_has_Receita_Receita1_idx` (`fk_id_rec` ASC, `fk_cozinheiro` ASC) ,
  INDEX `fk_Livro_has_Receita_Livro1_idx` (`fk_livro` ASC) ,
  CONSTRAINT `fk_Livro_has_Receita_Livro1`
    FOREIGN KEY (`fk_livro`)
    REFERENCES `cozinha_criativa`.`livro` (`id_livro`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Livro_has_Receita_Receita1`
    FOREIGN KEY (`fk_id_rec` , `fk_cozinheiro`)
    REFERENCES `cozinha_criativa`.`receita` (`id_receita` , `fk_cozinheiro`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


CREATE TABLE IF NOT EXISTS `cozinha_criativa`.`degustacao` (
  `id_degustacao` INT NOT NULL AUTO_INCREMENT,
  `data_degustacao` DATE NOT NULL,
  `nota` DECIMAL(3,1) NOT NULL,
  `fk_degustador` BIGINT NOT NULL,
  PRIMARY KEY (`id_degustacao`),
  INDEX `fk_Degustacao_Funcionario1_idx` (`fk_degustador` ASC) ,
  CONSTRAINT `fk_Degustacao_Funcionario1`
    FOREIGN KEY (`fk_degustador`)
    REFERENCES `cozinha_criativa`.`funcionario` (`id_funcionario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


CREATE TABLE IF NOT EXISTS `cozinha_criativa`.`Receita_has_Degustacao` (
  `Receita_id_receita` BIGINT NOT NULL,
  `Receita_fk_cozinheiro` BIGINT NOT NULL,
  `Degustacao_id_degustacao` INT NOT NULL,
  PRIMARY KEY (`Receita_id_receita`, `Receita_fk_cozinheiro`, `Degustacao_id_degustacao`),
  INDEX `fk_Receita_has_Degustacao_Degustacao1_idx` (`Degustacao_id_degustacao` ASC) ,
  INDEX `fk_Receita_has_Degustacao_Receita1_idx` (`Receita_id_receita` ASC, `Receita_fk_cozinheiro` ASC) ,
  CONSTRAINT `fk_Receita_has_Degustacao_Receita1`
    FOREIGN KEY (`Receita_id_receita` , `Receita_fk_cozinheiro`)
    REFERENCES `Projeto_Inovacao`.`Receita` (`id_receita` , `fk_cozinheiro`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Receita_has_Degustacao_Degustacao1`
    FOREIGN KEY (`Degustacao_id_degustacao`)
    REFERENCES `cozinha_criativa`.`degustacao` (`id_degustacao`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


CREATE TABLE IF NOT EXISTS `cozinha_criativa`.`estados` (
  `id_estado` INT NOT NULL COMMENT 'Esse é o identificador de um Estado:\n\nEx:\n\n01 - Pará\n02 - Distrito Federal\n03 - Pernambuco\n...',
  `descricao` VARCHAR(45) NOT NULL COMMENT 'Esse é o nome de um estado do Brasil\n\nEx:\n\nPará\nDistrito Federal\nPernambuco',
  PRIMARY KEY (`id_estado`))
ENGINE = InnoDB;

CREATE TABLE IF NOT EXISTS `cozinha_criativa`.`Estados_has_Restaurante` (
  `Estados_idEstado` INT NOT NULL,
  `Restaurante_idRestaurante` BIGINT NOT NULL,
  PRIMARY KEY (`Estados_idEstado`, `Restaurante_idRestaurante`),
  INDEX `fk_Estados_has_Restaurante_Restaurante1_idx` (`Restaurante_idRestaurante` ASC) ,
  INDEX `fk_Estados_has_Restaurante_Estados1_idx` (`Estados_idEstado` ASC) ,
  CONSTRAINT `fk_Estados_has_Restaurante_Estados1`
    FOREIGN KEY (`Estados_idEstado`)
    REFERENCES `cozinha_criativa`.`estados` (`id_Estado`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Estados_has_Restaurante_Restaurante1`
    FOREIGN KEY (`Restaurante_idRestaurante`)
    REFERENCES `cozinha_criativa`.`restaurante` (`id_Restaurante`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
